Figure 2.1: off edge of page.

Some figures seem to have acquired an extra digit sometimes
(e.g. 3.1.1 rather than 3.1)?

Still need a better name for the automata.

Might be worthwhile going and enumerating all of the possible
interaction graphs for some simple programs and then saying something
about their composition.  e.g. only actually one interesting program
for (non control-flow) single-variable concurrency.  Turns out to be
quite tricky to do, though.

Figure 3.3: Completely borked.

Need to give machine semantics before describing how symbolic
execution engine works.

Think more about how much we'd need to do to support infinite
machines.

Do we really need dynamic single assignment form any more?

The canonicalisation section needs rethinking.  Really,
canonicalisation in general needs rethinking.

The diagrams in the enforcing crashes section are hideous (mostly just
too much vspace).

Need to think about handling of syscalls during interpretation.

No discussion currently of timeout assignment in enforcement mode.

Crash enforcement: might be worth being a bit more explicit about what
the various bits of the plan actually mean.

Crash enforcement: need to justify all the semantic simplifications
when going from interpreter to compiler.  Some of them are quite
non-obvious.

Crash enforcement compiler: use the analogy of encoding state into the
RIP register.

Description of crash enforcement compiler just needs to be rewritten.
